<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt" xmlns:local="local">
<div id="topLevelChartContainer">
<script type="text/javascript">var diffChartClick = {};var diffBuildMap = {};</script>
<j:forEach var="chart" items="${action.chartsData}">
    <j:set var="chartData" value="${chart.chartData}" />
<j:choose>
<j:when test="${chartData.size() == 0}">
    <div style="font-family: monospace; font-size:4">missing: ${chart.displayName}</div>
</j:when>
<j:otherwise>
    <h3 style="font-family: monospace">${chart.displayName}</h3>
    <div id="rpmsChartContainer-${chart.id}">
    <canvas id='rpmsChart-${chart.id}' width='500' height='500'></canvas></div>
    <script type="text/javascript">
        // &lt;![CDATA[
        var allRpms = {
          type: 'line',
          data:   {
          labels: [
        <j:forEach var="build" items="${chartData}" varStatus="status">
        "${build.buildNameShortened}"<j:if test="${!status.last}">,</j:if>
        </j:forEach>
        ],
                datasets: [
                {
                label: "${chart.chartInstalled}",
                        fillColor: "rgba(128,255,128,0.2)",
                        strokeColor: "rgba(128,255,128,1)",
                        pointColor: "rgba(128,255,128,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(128,255,128,1)",
                        data: [
        <j:forEach var="build" items="${chartData}" varStatus="status">
            ${build.installed}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                },
                {
                label: "${chart.chartRemoved}",
                        fillColor: "rgba(255,128,128,0.2)",
                        strokeColor: "rgba(255,128,128,1)",
                        pointColor: "rgba(255,128,128,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(255,128,128,1)",
                        data: [
        <j:forEach var="removed" items="${chartData}" varStatus="status">
            ${build.removed}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                },
                {
                label: "${chart.chartTotal}",
                        fillColor: "rgba(128,128,128,0.2)",
                        strokeColor: "rgba(128,128,128,1)",
                        pointColor: "rgba(128,128,128,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(128,128,128,1)",
                        data: [
        <j:forEach var="total" items="${chartData}" varStatus="status">
            ${build.total}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                }
                ]
            },
            options: {
              plugins: {
                legend: { display: false }
              },
              interaction: {
                mode: 'index',
                intersect: false
              }
            }
          };
        // Get the context of the canvas element we want to select
        var ctx = document.getElementById("rpmsChart-${chart.id}").getContext("2d");
        diffChartClick["rpmsChart-${chart.id}"] = new Chart(ctx, allRpms);
        <j:forEach var="build" items="${chartData}" varStatus="status">
        diffBuildMap["${build.buildNameShortened}"] = "${build.buildNumber}";
        </j:forEach>
        document.getElementById("rpmsChartContainer-${chart.id}").onclick = function(evt){
        var activePoints = diffChartClick["rpmsChart-${chart.id}"].getPointsAtEvent(evt);
        window.open(diffBuildMap[activePoints[0].label] + "/rpms/#${chart.id}", "_blank");
        };
        // ]]&gt;
    </script>
</j:otherwise>
</j:choose>
</j:forEach>
</div>
</j:jelly>
